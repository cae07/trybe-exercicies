#Exerc√≠cio 1: Fa√ßa um programa que solicite o nome de uma
# pessoa usu√°ria e imprima-o na vertical.

# nome = input("Qual o seu nome? ")

# for letra in nome:
#     print(letra)

# Exerc√≠cio 2: Escreva um programa que receba v√°rios n√∫meros
# naturais e calcule a soma desses valores. Caso algum valor
# da entrada seja inv√°lido, por exemplo uma letra, uma mensagem
# deve ser exibida, na sa√≠da de erros, no seguinte formato:
# "Erro ao somar valores, {valor} √© um valor inv√°lido".
# Ao final, voc√™ deve imprimir a soma dos valores v√°lidos.
# ü¶ú Receba os valores em um mesmo input , solicitando √† pessoa
# usu√°ria que separe-os com um espa√ßo. Receba os valores no
# formato str e utilize o m√©todo split para pegar cada valor separado.
# O m√©todo isdigit , embutido no tipo str , pode ser utilizado 
# para verificar se a string corresponde a um n√∫mero natural.

from curses.ascii import isdigit



def verifica_e_soma(lista):
    numeros = [];
    for digito in lista:
        if digito.isdigit() == False:
            return print(f"o d√≠gito {digito} n√£o √© v√°lido")
        else:
            numeros.append(int (digito))
    soma = 0
    for numero in numeros:
        soma += numero
    
    return soma

# lista = (input("digite alguns numeros separados por espa√ßos que vou somar tudo: ")).split()
# print(verifica_e_soma(lista))

# Exerc√≠cio 3: Dado um arquivo contendo estudantes e suas respectivas notas,
# escreva um programa que l√™ todas essas informa√ß√µes e filtre mantendo somente as pessoas
# que est√£o reprovadas, e escreva seus nomes em outro arquivo. A nota min√≠ma para aprova√ß√£o √© 6.
# Arquivo:
# Marcos 10
# Felipe 4
# Jos√© 6
# Ana 10
# Maria 9
# Miguel 5

### escrever arquivo
with open("estudantes.txt", mode="w") as file:
    LIST = ["Marcos 10\n", "Felipe 4\n", "Jos√© 6\n", "Ana 10\n", "Maria 9\n", "Miguel 5\n"]
    file.writelines(LIST)
    


### ler arquivo e filtrar
recuperacao = []
with open("estudantes.txt") as file:
    for line in file:
        student = line.split(" ")
        if int (student[1]) < 6:
            recuperacao.append(student[0])

with open("recuperacao.txt", mode="w") as file:
    for student in recuperacao:
        file.writelines(f"{student}\n")

with open("recuperacao.txt", mode="r") as file:
    for student in file:
        print(student, end="")


# print(all_students)